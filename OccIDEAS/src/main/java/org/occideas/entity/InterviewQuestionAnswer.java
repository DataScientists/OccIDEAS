package org.occideas.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


/**
 * InterviewQuestionAnswer generated by hbm2java
 */
@Entity
@Table(name = "Interview_Question_Answer")
public class InterviewQuestionAnswer implements java.io.Serializable {

    /**
	 * 
	 */
    private static final long serialVersionUID = 1L;
    @Id @GeneratedValue
    private long id;
    
    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="interview_idinterview",referencedColumnName="idinterview",insertable=false,updatable=false)
    private Interview interview;   
    @ManyToOne(fetch=FetchType.LAZY)
    private Question question;
    @ManyToOne(fetch=FetchType.LAZY)
    private PossibleAnswer answer;
    @Column(length=2048)
    private String interviewQuestionAnswerFreetext;
    private int deleted;

    public InterviewQuestionAnswer() {
    }

    public String getInterviewQuestionAnswerFreetext() {
        return this.interviewQuestionAnswerFreetext;
    }

    public void setInterviewQuestionAnswerFreetext(String interviewQuestionAnswerFreetext) {
        this.interviewQuestionAnswerFreetext = interviewQuestionAnswerFreetext;
    }

    public int getDeleted() {
        return deleted;
    }

    public void setDeleted(int deleted) {
        this.deleted = deleted;
    }

	public PossibleAnswer getAnswer() {
		return answer;
	}

	public void setAnswer(PossibleAnswer answer) {
		this.answer = answer;
	}

	public Question getQuestion() {
		return question;
	}

	public void setQuestion(Question question) {
		this.question = question;
	}

	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public Interview getInterview() {
		return interview;
	}

	public void setInterview(Interview interview) {
		this.interview = interview;
	}

}
